{"version":3,"sources":["components/Cross.js","components/Circle.js","components/Square.js","components/Result.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["Cross","width","height","viewBox","className","x1","y1","x2","y2","Circle","cx","cy","r","Square","position","value","takeTurn","onClick","Result","winner","reset","EMPTY","CIRCLE","CROSS","Game","useState","player","positions","state","setState","detectWinner","p","every","pos","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.568bd826.chunk.js","sourcesContent":["\nconst Cross = () => {\n    return (\n        <svg width = \"100\" height = \"100\" viewBox = \"-50 -50 100 100\" className = \"cross\">\n            <line x1 = '-40' y1 = \"-40\"  x2 = '40' y2 = \"40\" />\n            <line x1 = '-40' y1 = \"40\"  x2 = '40' y2 = \"-40\" />\n        </svg>\n    );\n}\n\nexport default Cross;\n","\nconst Circle = () => {\n    return (\n      <svg width = \"100\" height = \"100\" viewBox = \"-50 -50 100 100\" className = \"circle\">\n          <circle cx = '0' cy = \"0\" r = '40' />\n      </svg>\n    );\n}\n\nexport default Circle;\n","import Cross from './Cross';\nimport Circle from './Circle';\n\nconst Square = ({position,value, takeTurn}) =>  {\n    const clicked = () =>{\n        if(value === \"EMPTY\") return takeTurn(position);\n    }\n    return (\n      <div className = \"square\" onClick = {clicked}>\n          {value === 'CIRCLE' && <Circle />}\n          {value === 'CROSS' && <Cross />}\n      </div>\n    );\n}\n\nexport default Square;\n","\nconst Result = ({winner, reset}) => {\n    return (\n        <div className = \"winner\">\n             <div className = \"modal\">\n                 {winner === 'OK' && <h1>It's a tie!</h1>}\n                 {winner === 'CROSS' && <h1>Cross won the game!</h1>}\n                 {winner === 'CIRCLE' && <h1>Circle won the game!</h1>}\n                 <button onClick = {reset} className = \"button\">Reset</button>\n             </div>\n        </div>\n    );\n}\n\nexport default Result;","import {useState} from 'react';\nimport Square from './Square';\nimport Result from './Result';\n\nconst EMPTY = \"EMPTY\";\nconst CIRCLE = 'CIRCLE';\nconst CROSS = 'CROSS';\n\nconst Game = () => {\n  const [state, setState]  = useState({\n    player: CIRCLE,\n    positions:[\n        EMPTY,EMPTY,EMPTY,\n        EMPTY,EMPTY,EMPTY,\n        EMPTY,EMPTY,EMPTY,\n    ],\n    winner: EMPTY\n\n  });\n\nconst takeTurn = (position) =>{\n   const positions = [...state.positions];\n   positions[position] = state.player;\n   //console.log('clicked!')\n\n   setState({\n       player: state.player === CIRCLE ? CROSS : CIRCLE,\n       positions,\n       winner: detectWinner(positions)\n   })\n}  \nfunction detectWinner(p){\n    if(p[0] === CIRCLE && p[1] === CIRCLE && p[2] === CIRCLE ) return CIRCLE;\n    if(p[3] === CIRCLE && p[4] === CIRCLE && p[5] === CIRCLE ) return CIRCLE;\n    if(p[6] === CIRCLE && p[7] === CIRCLE && p[8] === CIRCLE ) return CIRCLE;\n\n    if(p[0] === CIRCLE && p[3] === CIRCLE && p[6] === CIRCLE ) return CIRCLE;\n    if(p[1] === CIRCLE && p[4] === CIRCLE && p[7] === CIRCLE ) return CIRCLE;\n    if(p[2] === CIRCLE && p[5] === CIRCLE && p[8] === CIRCLE ) return CIRCLE;\n\n    if(p[0] === CIRCLE && p[4] === CIRCLE && p[8] === CIRCLE ) return CIRCLE;\n    if(p[2] === CIRCLE && p[4] === CIRCLE && p[6] === CIRCLE ) return CIRCLE;\n\n\n    if(p[0] === CROSS && p[1] === CROSS && p[2] === CROSS ) return CROSS;\n    if(p[3] === CROSS && p[4] === CROSS && p[5] === CROSS ) return CROSS;\n    if(p[6] === CROSS && p[7] === CROSS && p[8] === CROSS ) return CROSS;\n\n    if(p[0] === CROSS && p[3] === CROSS && p[6] === CROSS ) return CROSS;\n    if(p[1] === CROSS && p[4] === CROSS && p[7] === CROSS ) return CROSS;\n    if(p[2] === CROSS && p[5] === CROSS && p[8] === CROSS ) return CROSS;\n\n    if(p[0] === CROSS && p[4] === CROSS && p[8] === CROSS ) return CROSS;\n    if(p[2] === CROSS && p[4] === CROSS && p[6] === CROSS ) return CROSS;\n\n    if(p.every(pos => pos != EMPTY)) return 'OK';\n    return EMPTY;\n\n}\nfunction reset(){\n    setState({\n        player: CIRCLE,\n        positions:[\n            EMPTY,EMPTY,EMPTY,\n            EMPTY,EMPTY,EMPTY,\n            EMPTY,EMPTY,EMPTY,\n        ],\n        winner: EMPTY\n    })\n}\n\nreturn (\n    <>\n        <div className = \"grid\">\n            <Square position = {0} value = {state.positions[0]} takeTurn = {takeTurn}/>\n            <Square position = {1} value = {state.positions[1]} takeTurn = {takeTurn}/>\n            <Square position = {2} value = {state.positions[2]} takeTurn = {takeTurn}/>\n            <Square position = {3} value = {state.positions[3]} takeTurn = {takeTurn}/>\n            <Square position = {4} value = {state.positions[4]} takeTurn = {takeTurn}/>\n            <Square position = {5} value = {state.positions[5]} takeTurn = {takeTurn}/>\n            <Square position = {6} value = {state.positions[6]} takeTurn = {takeTurn}/>\n            <Square position = {7} value = {state.positions[7]} takeTurn = {takeTurn}/>\n            <Square position = {8} value = {state.positions[8]} takeTurn = {takeTurn}/>\n        </div>\n        {state.winner!= EMPTY && <Result winner = {state.winner} reset = {reset}/>}\n    </>\n);\n  \n}\n\nexport default Game;\n","import './App.css';\nimport Game from './components/Game';\nfunction App() {\n  return (\n    <div className=\"game\">\n        <Game />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}